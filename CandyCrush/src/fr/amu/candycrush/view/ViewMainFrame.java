package fr.amu.candycrush.view;

import java.awt.Graphics;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Observable;
import java.util.Observer;

import fr.amu.candycrush.core.SingletonGrid;
import fr.amu.candycrush.model.ModelMainFrame;

public class ViewMainFrame extends javax.swing.JFrame implements Observer {

	private static final long serialVersionUID = 1L;

	private GamePanel gamePanel;

	public ViewMainFrame() {
		initComponents();
		
		
		setVisible(true);
		setLocationRelativeTo(null);  // *** this will center your app ***
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		gamePanel = new GamePanel();
		add(gamePanel);
		pack();
		
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent event) {
				System.exit(0);
			}
		});
	}

	@Override
	public void update(Observable o, Object arg) {
		if(o instanceof ModelMainFrame){
			if(arg instanceof SingletonGrid)
			{
				gamePanel.repaint();
			}
		}

	}
	
	public GamePanel getGamePanel() {
		return gamePanel;
	}
	
	public void setGamePanel(GamePanel gamePanel) {
		this.gamePanel = gamePanel;
	}

}

